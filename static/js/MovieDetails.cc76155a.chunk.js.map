{"version":3,"file":"static/js/MovieDetails.cc76155a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/components/AdditionalInfo/AdditionalInfo.module.scss?8b46","components/AdditionalInfo/AdditionalInfo.jsx","webpack://react-homework-template/./src/components/GoBackLink/GoBackLink.module.scss?52f8","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails.jsx","services/MovieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieInfoWrap\":\"MovieInfo_movieInfoWrap__mg9H-\",\"movieInfoPoster\":\"MovieInfo_movieInfoPoster__OQA8i\",\"movieTitle\":\"MovieInfo_movieTitle__JtF5D\",\"movieAbout\":\"MovieInfo_movieAbout__7EPPq\",\"overview\":\"MovieInfo_overview__fAKQx\",\"additionalOverview\":\"MovieInfo_additionalOverview__C0Acr\",\"overviewContent\":\"MovieInfo_overviewContent__1GLhw\",\"posterWrap\":\"MovieInfo_posterWrap__gxetF\"};","import styles from './MovieInfo.module.scss';\nimport PropTypes from 'prop-types';\n\nexport function MovieInfo({\n  movieTitle,\n  movieOverview,\n  movieRait,\n  moviePoster,\n  movieGenres,\n  movieDate,\n  movieTrailer,\n  country,\n}) {\n  const movieCountry = country.map(item => item.name);\n  const movScore = Math.round(movieRait * 10);\n  let videoSrc = `https://www.youtube.com/embed/${movieTrailer}`;\n  let src = `https://image.tmdb.org/t/p/w500${moviePoster}`;\n  if (moviePoster === null) {\n    src =\n      'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';\n  }\n  return (\n    <div className={styles.movieInfoWrap}>\n      <div className={styles.posterWrap}>\n        <img className={styles.movieInfoPoster} src={src} alt=\"\" />\n      </div>\n      <div className={styles.movieAbout}>\n        <h2 className={styles.movieTitle}>{movieTitle}</h2>\n        <p className={styles.overview}>\n          Country:{'  '}\n          <span className={styles.additionalOverview}>{movieCountry}</span>\n        </p>\n        <p className={styles.overview}>\n          Year: <span className={styles.additionalOverview}>{movieDate}</span>\n        </p>\n        <p className={styles.overview}>\n          User Score:{'  '}\n          <span className={styles.additionalOverview}>{movScore}%</span>\n        </p>\n        <p className={styles.overview}>\n          Genres:{'  '}\n          <span className={styles.additionalOverview}>{movieGenres}</span>\n        </p>\n\n        <p className={styles.overview}>Overview</p>\n        <p className={styles.overviewContent}>{movieOverview}</p>\n      </div>\n      <div>\n        <iframe\n          width=\"560\"\n          height=\"315\"\n          title=\"This is a unique title\"\n          src={videoSrc}\n          frameBorder=\"0\"\n        ></iframe>\n      </div>\n    </div>\n  );\n}\n\nMovieInfo.propTypes = {\n  movieTitle: PropTypes.string.isRequired,\n  movieOverview: PropTypes.string.isRequired,\n  movieRait: PropTypes.number.isRequired,\n  moviePoster: PropTypes.string.isRequired,\n  movieGenres: PropTypes.string.isRequired,\n  movieDate: PropTypes.string.isRequired,\n  movieTrailer: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"additionalWrap\":\"AdditionalInfo_additionalWrap__aSvfi\",\"additionalLinkWrap\":\"AdditionalInfo_additionalLinkWrap__JhjzN\",\"additionalLink\":\"AdditionalInfo_additionalLink__8PuCQ\"};","import { Link } from 'react-router-dom';\nimport styles from './AdditionalInfo.module.scss';\nimport PropTypes from 'prop-types';\nexport function AdditionalInfo({ location }) {\n  return (\n    <div className={styles.additionalWrap}>\n      <h2>Additional Information</h2>\n      <div className={styles.additionalLinkWrap}>\n        <Link\n          className={styles.additionalLink}\n          to=\"cast\"\n          state={{ from: location }}\n        >\n          Cast\n        </Link>\n        <Link\n          className={styles.additionalLink}\n          to=\"reviews\"\n          state={{ from: location }}\n        >\n          Reviews\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nAdditionalInfo.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"GoBackLink_backLink__CRjWp\"};","import { Link } from 'react-router-dom';\nimport styles from './GoBackLink.module.scss';\n\nimport { useLocation } from 'react-router-dom';\n\nexport function GoBackLink() {\n  const location = useLocation();\n  return (\n    <Link className={styles.backLink} to={location.state?.from ?? '/Home'}>\n      Go back\n    </Link>\n  );\n}\n","import { getMovieDetails, getMovieTrailer } from 'services/MovieApi';\nimport { useEffect, useState, Suspense } from 'react';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\nexport default function MovieDetails() {\n  const [movieDetails, setmMvieDetails] = useState(null);\n  const [movietrailer, setmMvieTrailer] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === undefined) {\n      return;\n    }\n    async function showFilmDetails() {\n      try {\n        const { data } = await getMovieDetails(movieId);\n        const resolve = await getMovieTrailer(movieId);\n        setmMvieTrailer(resolve.data.results[0].key);\n        setmMvieDetails(data);\n        setPoster(data.poster_path);\n        setGenres(data.genres);\n      } catch (error) {}\n    }\n    showFilmDetails();\n  }, [movieId]);\n\n  const movieGenres = genres.map(gene => gene.name);\n  const location = useLocation();\n\n  return (\n    <>\n      {movieDetails && (\n        <>\n          <GoBackLink />\n          <MovieInfo\n            moviePoster={poster}\n            movieTitle={movieDetails.title}\n            movieOverview={movieDetails.overview}\n            movieRait={movieDetails.vote_average}\n            movieGenres={movieGenres.join(', ')}\n            movieDate={movieDetails.release_date.slice(0, 4)}\n            movieTrailer={movietrailer}\n            country={movieDetails.production_countries}\n          />\n        </>\n      )}\n\n      <AdditionalInfo location={location.state?.from ?? '/Home'} />\n      <Suspense fallback={<div>Loading..</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n// const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport async function fetchTrandingFilms(page) {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}&page=${page}`);\n}\n\nexport async function movieSearching(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(\n    `${BASE_URL}?${API_KEY}&query=${searchQuery}&language=en-US`\n  );\n}\n\nexport async function getMovieDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}?${API_KEY}&language=en-US`);\n}\n\nexport async function getCastDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/credits?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieReviews(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/reviews?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieTrailer(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/videos?${API_KEY}&language=en-US`);\n}\nexport async function getMovieGenres() {\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}&language=en-US`);\n}\nexport async function getMovieCountry(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}?${API_KEY}&language=en-US`);\n}\n"],"names":["MovieInfo","movieTitle","movieOverview","movieRait","moviePoster","movieGenres","movieDate","movieTrailer","movieCountry","country","map","item","name","movScore","Math","round","videoSrc","src","className","styles","alt","width","height","title","frameBorder","AdditionalInfo","location","to","state","from","GoBackLink","useLocation","MovieDetails","useState","movieDetails","setmMvieDetails","movietrailer","setmMvieTrailer","genres","setGenres","poster","setPoster","movieId","useParams","useEffect","getMovieDetails","data","getMovieTrailer","resolve","results","key","poster_path","undefined","showFilmDetails","gene","overview","vote_average","join","release_date","slice","production_countries","Suspense","fallback","fetchTrandingFilms","page","axios","movieSearching","searchQuery","id","getCastDetails","getMovieReviews","getMovieGenres"],"sourceRoot":""}