{"version":3,"file":"static/js/Movies.9134120a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.scss?25b4","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/MovieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__9621Y\",\"itemLink\":\"MovieItem_itemLink__nrIXO\",\"poster\":\"MovieItem_poster__u8ia6\",\"title\":\"MovieItem_title__5J-tB\",\"release\":\"MovieItem_release__S3ABN\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './MovieItem.module.scss';\nimport PropTypes from 'prop-types';\nexport const MovieItem = ({\n  filmTitle,\n  movieId,\n  moviePoster,\n  movieDate,\n  genres,\n}) => {\n  const location = useLocation();\n  let src = `https://image.tmdb.org/t/p/original/${moviePoster}`;\n\n  return (\n    <Link\n      className={styles.itemLink}\n      to={`/movies/${movieId}`}\n      state={{ from: location }}\n    >\n      <li className={styles.item}>\n        <img className={styles.poster} src={src} alt=\"\" />\n        <p className={styles.title}>{filmTitle}</p>\n        <p className={styles.release}>\n          {movieDate} | {genres}\n        </p>\n      </li>\n    </Link>\n  );\n};\nMovieItem.propTypes = {\n  // filmTitle: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__pH29x\"};","import PropTypes from 'prop-types';\nimport styles from './MovieList.module.scss';\nexport function MovieList({ children }) {\n  return <ul className={styles.movieList}>{children}</ul>;\n}\n\nMovieList.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__pOkDi\"};","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.scss';\nimport Input from '@mui/material/Input';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button';\nexport function SearchBar({ onSubmit, value }) {\n  const [serachBarQuery, setSerachBarQuery] = useState(value);\n\n  const handleInputType = e => {\n    setSerachBarQuery(e.currentTarget.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (serachBarQuery.trim() !== '') {\n      onSubmit(serachBarQuery);\n    } else {\n      return Notiflix.Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n  };\n  return (\n    <form className={styles.searchbar} onSubmit={handleFormSubmit}>\n      <Input\n        placeholder=\"Searching movie...\"\n        value={serachBarQuery}\n        type=\"text\"\n        onChange={handleInputType}\n        sx={{\n          width: 300,\n        }}\n      />\n      <Button\n        variant=\"text\"\n        endIcon={\n          <SearchIcon\n            sx={{\n              fill: 'rgb(214, 49, 49)',\n            }}\n          />\n        }\n        type=\"submit\"\n        sx={{\n          '& \t.MuiButton-endIcon': {\n            margin: 0,\n          },\n        }}\n      ></Button>\n    </form>\n  );\n}\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { movieSearching } from 'services/MovieApi';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nexport default function Movies() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function searchMovie() {\n      if (query === '') {\n        return;\n      }\n\n      try {\n        const { data } = await movieSearching(query);\n\n        setMoviesData(data.results);\n\n        if (data.results.length === 0) {\n          return Notiflix.Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      } catch (error) {}\n    }\n    searchMovie();\n  }, [query]);\n\n  const formData = data => {\n    setSearchParams({ query: data.toLowerCase().trim() });\n  };\n  function cutFilmTitle(title) {\n    if (title.length > 30) {\n      return title.slice(0, 30) + '...';\n    } else {\n      return title;\n    }\n  }\n  return (\n    <>\n      <SearchBar value={query} onSubmit={formData} />\n      <MovieList>\n        {moviesData.map(({ id, title, poster_path }) => {\n          return (\n            <MovieItem\n              key={id}\n              filmTitle={cutFilmTitle(title)}\n              movieId={id}\n              moviePoster={poster_path}\n            />\n          );\n        })}\n      </MovieList>\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n// const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport async function fetchTrandingFilms() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}`);\n}\n\nexport async function movieSearching(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(\n    `${BASE_URL}?${API_KEY}&query=${searchQuery}&language=en-US`\n  );\n}\n\nexport async function getMovieDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}?${API_KEY}&language=en-US`);\n}\n\nexport async function getCastDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/credits?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieReviews(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/reviews?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieTrailer(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/videos?${API_KEY}&language=en-US`);\n}\nexport async function getMovieGenres() {\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}&language=en-US`);\n}\n"],"names":["MovieItem","filmTitle","movieId","moviePoster","movieDate","genres","location","useLocation","src","className","styles","to","state","from","alt","MovieList","children","SearchBar","onSubmit","value","useState","serachBarQuery","setSerachBarQuery","e","preventDefault","trim","Notiflix","Input","placeholder","type","onChange","currentTarget","sx","width","Button","variant","endIcon","Search","fill","margin","Movies","moviesData","setMoviesData","useSearchParams","searchParams","setSearchParams","query","get","useEffect","movieSearching","data","results","length","searchMovie","cutFilmTitle","title","slice","toLowerCase","map","id","poster_path","fetchTrandingFilms","axios","searchQuery","getMovieDetails","getCastDetails","getMovieReviews","getMovieTrailer","getMovieGenres"],"sourceRoot":""}